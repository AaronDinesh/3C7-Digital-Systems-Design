# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
create_project -in_memory -part xc7k325tffg900-2

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir {C:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/bit6_CLA_Adder/bit6_CLA_Adder.cache/wt} [current_project]
set_property parent.project_path {C:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/bit6_CLA_Adder/bit6_CLA_Adder.xpr} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property board_part xilinx.com:kc705:part0:1.6 [current_project]
set_property ip_output_repo {c:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/bit6_CLA_Adder/bit6_CLA_Adder.cache/ip} [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_verilog -library xil_defaultlib {
  {C:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/bit6_CLA_Adder/bit6_CLA_Adder.srcs/sources_1/new/b6_CLA.v}
  {C:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/full_adder.v}
  {C:/Users/aaron/Desktop/College Work/3rd Year/3C7/Lab C/bit6_CLA_Adder/bit6_CLA_Adder.srcs/sources_1/new/RippleAdder_tb.v}
}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
set_param ips.enableIPCacheLiteLoad 1
close [open __synthesis_is_running__ w]

synth_design -top RippleAdder_tb -part xc7k325tffg900-2


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef RippleAdder_tb.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file RippleAdder_tb_utilization_synth.rpt -pb RippleAdder_tb_utilization_synth.pb"
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
